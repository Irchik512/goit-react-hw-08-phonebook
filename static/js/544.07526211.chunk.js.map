{"version":3,"file":"static/js/544.07526211.chunk.js","mappings":"0VAcIA,GAAYC,EAAAA,EAAAA,IAAW,SAAoBC,EAAaC,GAC1D,IAAIC,EACEC,GAASC,EAAAA,EAAAA,IAAe,YAAaJ,GACrCK,GAAQC,EAAAA,EAAAA,IAAiBN,GAG7BO,GAIEF,EALFG,UAKEH,EAJFE,UAAQE,EAINJ,EAHFK,kBAAAA,OAAiB,IAAAD,GAAmBE,EAAAA,EAAAA,KAAIC,EAAmB,IAAGH,EAAAI,EAG5DR,EAFFS,kBAAAA,OAAiB,IAAAD,EAAG,KAAIA,EACrBE,GAAIC,EAAAA,EAAAA,GACLX,EAAKY,GACHC,GAAQC,EAAAA,EAAAA,MACRC,EAA6E,OAAjElB,EAAc,MAATgB,OAAgB,EAASA,EAAMG,cAAcN,EAAMd,IAAgBC,GAAEoB,EAAAA,EAAAA,GAAA,CAAKrB,IAAAA,GAAQc,GACzG,OAAuBQ,EAAAA,EAAAA,MACrBC,EAAAA,EAAAA,OAAYF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEPF,GAAQ,IACXZ,WAAWiB,EAAAA,EAAAA,IAAG,qBAAsBpB,EAAMG,WAC1CkB,OAAKJ,EAAAA,EAAAA,GAAA,CACHK,QAAS,QACTC,UAAW,SACRzB,GAELI,SAAU,CACRA,GACU,MAATW,OAAgB,EAASA,EAAMW,YAAcnB,EAAoBI,SAK1EhB,EAAUgC,YAAc,YACxB,IAAIlB,GAAoBb,EAAAA,EAAAA,IACtB,SAA4BM,EAAOJ,GACjC,IAAMiB,GAAQC,EAAAA,EAAAA,MACRhB,GAAS4B,EAAAA,EAAAA,KACf,KAAe,MAATb,OAAgB,EAASA,EAAMW,YACnC,OAAO,KACT,IAAMrB,GAAYiB,EAAAA,EAAAA,IAAG,kCAAmCpB,EAAMG,WAC9D,OAAuBG,EAAAA,EAAAA,KACrBa,EAAAA,EAAAA,MAAWF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEG,MAATJ,OAAgB,EAASA,EAAMc,0BAA0B3B,EAAOJ,IAAI,IACvEyB,MAAOvB,EAAOO,kBACdF,UAAAA,QAKRI,EAAkBkB,YAAc,oB,wBC5DjB,SAASG,IAEtB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5B,SAAA,EACE2B,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACP,YAAU,EAAAtB,SAAA,EACrB8B,EAAAA,EAAAA,KAACvC,EAAS,CAAAS,SAAC,UACX8B,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,YAAY,OAAOC,KAAK,WAEjCN,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACP,YAAU,EAAAtB,SAAA,EACrB8B,EAAAA,EAAAA,KAACvC,EAAS,CAAAS,SAAC,UACX8B,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACG,KAAK,QAAQF,YAAY,OAAOC,KAAK,QAC5CH,EAAAA,EAAAA,KAACvC,EAAS,CAAAS,SAAC,cACX8B,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,YAAY,WAAWC,KAAK,WAErCH,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,YAAY,OAAOC,QAAQ,UAASrC,SAAC","sources":["../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import { FormControl, FormLabel, Input, Button } from \"@chakra-ui/react\";\n\nexport default function RegisterView() {\n\n  return(\n    <>\n      <FormControl isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input placeholder='name' size='md' />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Mail</FormLabel>\n        <Input type='email' placeholder='mail' size='md' />\n        <FormLabel>Password</FormLabel>\n        <Input placeholder='password' size='md' />\n      </FormControl>\n      <Button colorScheme='teal' variant='outline'>\n            Button\n      </Button></>\n      \n  )\n};"],"names":["FormLabel","forwardRef","passedProps","ref","_a","styles","useStyleConfig","props","omitThemingProps","children","className","_props$requiredIndica","requiredIndicator","jsx","RequiredIndicator","_props$optionalIndica","optionalIndicator","rest","_objectWithoutProperties","_excluded","field","useFormControlContext","ownProps","getLabelProps","_objectSpread","jsxs","chakra","cx","__css","display","textAlign","isRequired","displayName","useFormControlStyles","getRequiredIndicatorProps","RegisterView","_jsxs","_Fragment","FormControl","_jsx","Input","placeholder","size","type","Button","colorScheme","variant"],"sourceRoot":""}