{"version":3,"file":"static/js/544.69db1082.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  border: 2px solid gray;\n  margin 0 auto;\n  padding: 15px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  max-width: 350px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  display: block;\n  border: none;\n  cursor: pointer;\n  padding: 5px;\n  margin: ${props => (props.type === 'submit' ? '0 auto' : '0')};\n  max-width: 100%;\n  overflow: hidden;\n  width: fit-content;\n   {\n    background-color: ${props =>\n      props.type === 'submit' ? '#ff8100ba' : '#009688'};\n  }\n`;\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import { FormControl, FormLabel, Input, Button } from \"@chakra-ui/react\";\nimport { Form } from \"components/ContactForm/ContactForm.styled\";\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {register} from 'redux/auth'\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\nconsole.log({name, email, password});\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({name, email, password}));\n    setName('');\n    setEmail('');\n    setPassword('');  \n  };\n  return(\n    <Form  onSubmit={handleSubmit}>\n      <FormControl isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input name=\"name\" type='text' placeholder='name' size='md' onChange={handleChange} />\n        <FormLabel>Email</FormLabel>\n        <Input name=\"email\" type='email' placeholder='email' size='md' onChange={handleChange} />\n        <FormLabel>Password</FormLabel>\n        <Input name=\"password\" type='text' placeholder='password' size='md' onChange={handleChange} />\n      </FormControl>\n      <Button type=\"submit\" colorScheme='teal' variant='outline'>\n            Button\n      </Button>\n      </Form>\n      \n  )\n};"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","props","type","FormLabel","forwardRef","passedProps","ref","_a","styles","useStyleConfig","omitThemingProps","children","className","_props$requiredIndica","requiredIndicator","jsx","RequiredIndicator","_props$optionalIndica","optionalIndicator","rest","_objectWithoutProperties","_excluded","field","useFormControlContext","ownProps","getLabelProps","_objectSpread","jsxs","chakra","cx","__css","display","textAlign","isRequired","displayName","useFormControlStyles","getRequiredIndicatorProps","RegisterView","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","console","log","handleChange","e","_e$currentTarget","currentTarget","value","_jsxs","onSubmit","preventDefault","register","FormControl","_jsx","placeholder","size","onChange","colorScheme","variant"],"sourceRoot":""}