{"version":3,"file":"static/js/50.eb37f577.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  font-family: sans-serif;\n`;\nexport const Container = styled.div`\n  box-sizing: border-box;\n  padding: 0 20px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 35px;\n`;\n","import PropTypes from 'prop-types';\nimport { Section, Title, Container } from 'components/Section/Section.styled';\n\nexport default function Sections({ title, children }) {\n  return (\n    <Section>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </Section>\n  );\n}\n\nSections.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nexport const selectFilterValue = state => state.filter;\nexport const selectContactsValue = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilteredContacts = createSelector(\n  [selectContactsValue, selectFilterValue],\n  (contacts, value) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(value.toLowerCase().trim())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  border: 2px solid gray;\n  margin 0 auto;\n  padding: 15px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  max-width: 350px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  display: block;\n  border: none;\n  cursor: pointer;\n  padding: 5px;\n  margin: ${props => (props.type === 'submit' ? '0 auto' : '0')};\n  max-width: 100%;\n  overflow: hidden;\n  width: fit-content;\n   {\n    background-color: ${props =>\n      props.type === 'submit' ? '#ff8100ba' : '#009688'};\n  }\n`;\n","import { useState, } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsValue } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contactsList = useSelector(selectContactsValue);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = { name, phone };\n    if (contactsList.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onInput={handleChange}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\nexport const ContactsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 15px 0;\n  width: 100%;\n  font-family: sans-serif;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 40px) / 2);\n    justify-content: space-around;\n    flex-direction: row;\n  } ;\n`;\n","// import ContactsListItem from 'components/ContactList/ContactsListItem';\nimport { ContactsList } from 'components/ContactList/ContactsList.styled';\n// import { useSelector } from 'react-redux';\n// import { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\n\nexport default function ContactList() {\n  // const contactsList = useSelector(selectFilteredContacts);\n  return (\n    <ContactsList>\n    list of contacts\n      {/* {contactsList.map(contact => (\n        <ContactsListItem\n          key={contact.id}\n          name={contact.name}\n          number={contact.phone}\n          id={contact.id}\n        />\n      ))} */}\n    </ContactsList>\n  );\n}\n","import { Input, Label } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apdateFilter } from 'redux/filter/filterSlice';\nimport { selectFilterValue } from 'redux/contacts/contactsSelectors';\n\nexport default function Filter() {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  const handleChange = evt => {\n    const value = evt.target.value;\n    dispatch(apdateFilter(value));\n  };\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        required\n      />\n    </Label>\n  );\n}\n","import Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n// import Notification from 'components/Notification/Notification';\n// import { toast } from 'react-toastify';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectContactsValue ,selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\n// import {getAllContacts} from 'redux/contacts/contactsOperations'\n// import { useEffect } from 'react';\n\nexport default function ContactsView() {\n  // const contactsList = useSelector(selectContactsValue);\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n  \n  // useEffect(() => {\n  //   dispatch(getAllContacts());\n  // }, [dispatch]);\n\n  return (\n    <>\n      <Section> \n        <h2>Phonebook</h2>\n        <ContactForm />\n      </Section>\n      <Section>\n        <h2>Contacts</h2>   \n        {/* {isLoading && !error && <p>Request in progress...</p>}   */}\n        {/* {contactsList.length < 1 ? ( */}\n          <p>There is no contact yet.</p>\n        {/* ) : ( */}\n          <>\n            <Filter />             \n            <ContactList />\n          </>\n        {/* )} */}\n        {/* {error !== null && <Notification>{toast.error(error)}</Notification>}    */}\n      </Section>\n    </>\n  );\n}\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","Sections","_ref","title","children","_jsx","_jsxs","selectFilterValue","state","filter","selectContactsValue","contacts","items","createSelector","value","contact","name","toLowerCase","includes","trim","Form","Label","Input","Button","_templateObject4","props","type","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","phone","setPhone","contactsList","useSelector","dispatch","useDispatch","handleChange","e","_e$currentTarget","currentTarget","onSubmit","preventDefault","newContact","find","alert","concat","addContact","pattern","onChange","required","onInput","ContactsList","ContactList","Filter","filterValue","evt","target","apdateFilter","ContactsView","_Fragment"],"sourceRoot":""}