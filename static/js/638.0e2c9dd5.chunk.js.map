{"version":3,"file":"static/js/638.0e2c9dd5.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","../node_modules/@chakra-ui/button/dist/chunk-PEYICJIL.mjs","views/HomeView/HomeView.jsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Section = styled.section`\n  width: 100%;\n  font-family: sans-serif;\n  padding: 30px 0;\n\n`;\n\nexport const Title = styled.h2`\n  font-size: 35px;\n`;\n","import PropTypes from 'prop-types';\nimport { Section, Title,} from 'components/Section/Section.styled';\n\nexport default function Sections({ title, children }) {\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Section>\n  );\n}\n\nSections.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import {\n  ButtonGroupProvider\n} from \"./chunk-DGWZA2DU.mjs\";\n\n// src/button-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef(\n  function ButtonGroup2(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props;\n    const _className = cx(\"chakra-button__group\", className);\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled]\n    );\n    let groupStyles = {\n      display: \"inline-flex\",\n      ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n    };\n    const isVertical = orientation === \"vertical\";\n    return /* @__PURE__ */ jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        className: _className,\n        \"data-attached\": isAttached ? \"\" : void 0,\n        \"data-orientation\": orientation,\n        flexDir: isVertical ? \"column\" : void 0,\n        ...rest\n      }\n    ) });\n  }\n);\nButtonGroup.displayName = \"ButtonGroup\";\n\nexport {\n  ButtonGroup\n};\n","import  Section  from \"components/Section/Section\";\nimport { Heading, ButtonGroup, Button } from '@chakra-ui/react'\nimport { Link } from \"react-router-dom\";\n\nexport default function HomeView() {\n  return(\n    <Section>\n      <Heading as='h1' size='3xl' p={'90px 0'} >\n        Create your own 'web' PhoneBook!\n      </Heading>        \n        <ButtonGroup gap='4'>\n        <Button colorScheme='blackAlpha'><Link to='/register'>Registration</Link></Button>\n        <Button colorScheme='blackAlpha'><Link to='/login'>Login</Link></Button>\n      </ButtonGroup>\n    </Section>\n  )\n};","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Sections","_ref","title","children","_jsxs","_jsx","attachedStyles","horizontal","borderEndRadius","borderRadius","borderStartRadius","vertical","borderBottomRadius","borderTopRadius","gapStyles","spacing","marginStart","marginTop","ButtonGroup","forwardRef","props","ref","size","colorScheme","variant","className","_props$spacing","isAttached","isDisabled","_props$orientation","orientation","rest","_objectWithoutProperties","_excluded","_className","cx","context","useMemo","groupStyles","_objectSpread","display","isVertical","jsx","ButtonGroupProvider","value","chakra","role","__css","flexDir","displayName","HomeView","Heading","as","p","gap","Button","Link","to","_createContext","createContext","strict","name","_createContext2","_slicedToArray","useButtonGroup","ButtonIcon","_children","isValidElement","cloneElement","focusable","alignSelf","flexShrink","ButtonSpinner","label","placement","_props$children","Spinner","color","width","height","marginProp","spinnerStyles","_objectSpread2","alignItems","position","_defineProperty","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","assignRef","current","error","Error","concat","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","_len2","_key2","apply"],"sourceRoot":""}